name: Main Full Matrix

on:
  push:
    branches: [ "main" ]

concurrency:
  group: main-${{ github.sha }}
  cancel-in-progress: false

jobs:
  ui-matrix:
    name: UI (${{ matrix.browser }}, shard ${{ matrix.shard }})
    runs-on: ubuntu-latest
    timeout-minutes: 35
    strategy:
      fail-fast: false
      matrix:
        browser: [ chromium, firefox, webkit ]
        shard: [ "1/2", "2/2" ]   # split UI tests into 2 shards per browser

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-pw-${{ hashFiles('package-lock.json') }}
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run UI tests (all)
        env:
          ORANGEHRM_BASE_URL: ${{ secrets.ORANGEHRM_BASE_URL }}
          ORANGEHRM_USERNAME: ${{ secrets.ORANGEHRM_USERNAME }}
          ORANGEHRM_PASSWORD: ${{ secrets.ORANGEHRM_PASSWORD }}
          PWTEST_BROWSERS: ${{ matrix.browser }}
        run: |
          npx playwright test \
            --project=${{ matrix.browser }} \
            --shard ${{ matrix.shard }}

      - name: Upload UI report (${{ matrix.browser }}-${{ matrix.shard }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-${{ matrix.browser }}-${{ matrix.shard }}-report
          path: playwright-report

  bdd-full:
    name: BDD full (@regression)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: ui-matrix
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-pw-${{ hashFiles('package-lock.json') }}
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Run BDD @regression
        env:
          TAGS: "@regression and not @wip"
          ORANGEHRM_BASE_URL: ${{ secrets.ORANGEHRM_BASE_URL }}
          ORANGEHRM_USERNAME: ${{ secrets.ORANGEHRM_USERNAME }}
          ORANGEHRM_PASSWORD: ${{ secrets.ORANGEHRM_PASSWORD }}
        run: npm run bdd
      - name: Generate BDD HTML report
        if: always()
        run: npm run bdd:report
      - name: Upload BDD report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bdd-regression-report
          path: reports/cucumber-html

  api-a11y-visual:
    name: API + A11y + Visual
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: ui-matrix
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: |
          npm ci
          npx playwright install --with-deps

      - name: API full
        run: npx playwright test --grep "@api"

      - name: A11y full
        run: npx playwright test --grep "@a11y"

      - name: Visual full (no update)
        env:
          UPDATE_SNAPSHOTS: "0"
          ORANGEHRM_BASE_URL: ${{ secrets.ORANGEHRM_BASE_URL }}
          ORANGEHRM_USERNAME: ${{ secrets.ORANGEHRM_USERNAME }}
          ORANGEHRM_PASSWORD: ${{ secrets.ORANGEHRM_PASSWORD }}
        run: npm run test:visual

      - name: Upload report bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-a11y-visual-report
          path: |
            playwright-report
            reports/a11y
            reports/cucumber-html