name: CI - Simplified & Reliable

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      test_suite:
        description: "Test suite to run"
        required: true
        default: "smoke"
        type: choice
        options:
          - smoke
          - regression
          - api
          - all

env:
  NODE_VERSION: 20
  ORANGEHRM_BASE_URL: "https://opensource-demo.orangehrmlive.com"
  ORANGEHRM_USERNAME: "Admin"
  ORANGEHRM_PASSWORD: "admin123"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quick validation
  validation:
    name: Code Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 8

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint
        continue-on-error: true

      - name: Check formatting
        run: npm run format:check
        continue-on-error: true

      - name: Type check
        run: npx tsc --noEmit
        continue-on-error: true

  # API tests
  api-tests:
    name: API Testing
    runs-on: ubuntu-latest
    needs: validation
    timeout-minutes: 10
    if: always()

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run API tests
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ] || [ "${{ github.event.inputs.test_suite }}" = "smoke" ]; then
            npm run test:api:smoke
          else
            npm run test:api
          fi

      - name: Upload API test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-test-results
          path: test-results/
          retention-days: 7

  # E2E tests
  e2e-tests:
    name: E2E Testing
    runs-on: ubuntu-latest
    needs: validation
    timeout-minutes: 15
    if: always()

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ] || [ "${{ github.event.inputs.test_suite }}" = "smoke" ]; then
            npx playwright test --grep "@smoke"
          elif [ "${{ github.event.inputs.test_suite }}" = "regression" ]; then
            npx playwright test --grep "@regression"
          else
            npm test
          fi

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  # BDD tests
  bdd-tests:
    name: BDD Testing
    runs-on: ubuntu-latest
    needs: validation
    timeout-minutes: 12
    if: always()

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run BDD tests
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            npm run bdd:smoke
          elif [ "${{ github.event.inputs.test_suite }}" = "smoke" ]; then
            npm run bdd:smoke
          elif [ "${{ github.event.inputs.test_suite }}" = "regression" ]; then
            npm run bdd:regression
          else
            npm run bdd:all
          fi
        env:
          CI: "true"

      - name: Generate BDD report
        if: always()
        run: npm run bdd:report

      - name: Upload BDD report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bdd-test-results
          path: reports/cucumber-html/
          retention-days: 7

  # Test summary
  test-summary:
    name: Test Results Summary
    runs-on: ubuntu-latest
    needs: [validation, api-tests, e2e-tests, bdd-tests]
    if: always()
    timeout-minutes: 2

    steps:
      - name: Generate test summary
        run: |
          echo "## ðŸ§ª Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status | Details |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Validation | ${{ needs.validation.result }} | Code quality checks |" >> $GITHUB_STEP_SUMMARY
          echo "| API Tests | ${{ needs.api-tests.result }} | Service integration |" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Tests | ${{ needs.e2e-tests.result }} | User workflows |" >> $GITHUB_STEP_SUMMARY
          echo "| BDD Tests | ${{ needs.bdd-tests.result }} | Business scenarios |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
